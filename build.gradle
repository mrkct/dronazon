plugins {
    id "com.google.protobuf" version "0.8.16" // for GRPC
    id "java"
    id "war" // for REST

    id "com.diffplug.spotless" version "5.12.5"
}

group 'it.cutecchia.sdp'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

spotless {
    java {
        target project.fileTree(project.rootDir) {
            include 'src/**/*.java'
        }
        googleJavaFormat()
    }
}

dependencies {
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testImplementation 'org.assertj:assertj-core:3.19.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.1'
    testImplementation "org.mockito:mockito-core:3.+"

    implementation 'com.google.code.gson:gson:2.7'

    implementation group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.2'
    implementation group: 'org.codehaus.jackson', name: 'jackson-jaxrs', version: '1.9.2'
    implementation group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.2'
    implementation group: 'org.codehaus.jackson', name: 'jackson-xc', version: '1.9.2'
    implementation group: 'com.sun.jersey', name: 'jersey-client', version: '1.19.1'
    implementation group: 'com.sun.jersey', name: 'jersey-core', version: '1.19.1'
    implementation group: 'com.sun.jersey', name: 'jersey-json', version: '1.19.1'
    implementation group: 'com.sun.jersey', name: 'jersey-server', version: '1.19.1'
    implementation group: 'com.sun.jersey', name: 'jersey-servlet', version: '1.19.1'
    implementation group: 'org.codehaus.jettison', name: 'jettison', version: '1.1'
    implementation group: 'javax.ws.rs', name: 'jsr311-api', version: '1.1.1'
    implementation group: 'com.sun.jersey', name: 'jersey-server', version: '1.2'

    // MQTT Dependencies
    implementation group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.5'

    // GRPC Dependencies
    implementation 'com.google.protobuf:protobuf-java:3.10.0'
    implementation 'io.grpc:grpc-all:1.25.0'

}

// GRPC
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.10.1'
    }

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.25.0'
        }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

test {
    useJUnitPlatform()
}

task runOrderGenerator(type: JavaExec) {
    group = "Quick Runs"
    description = "Run the main class of the Dronazon order generator"
    classpath = sourceSets.main.runtimeClasspath
    main = "it.cutecchia.sdp.website.Main"

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(8))
        }
    }
}

task runAdminServer(type: JavaExec) {
    group = "Quick Runs"
    description = "Run the main class of the Dronazon admin server"
    classpath = sourceSets.main.runtimeClasspath
    main = "it.cutecchia.sdp.admin.server.Main"

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(8))
        }
    }
}

task runDrone(type: JavaExec) {
    group = "Quick Runs"
    description = "Run the main class of a Dronazon drone"
    classpath = sourceSets.main.runtimeClasspath
    main = "it.cutecchia.sdp.drones.Main"
    standardInput = System.in

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(8))
        }
    }
}
